name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  #schedule:
  #  - cron: '0 6 * * 1' # Weekly on Monday at 6 AM

jobs:
  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run npm audit
      run: npm audit --audit-level high

    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high

    - name: Upload Snyk results
      uses: actions/upload-artifact@v4
      with:
        name: snyk-report
        path: snyk.html
        retention-days: 30

  code-scan:
    name: Static Code Analysis
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: javascript, python

    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

    - name: Run Semgrep
      uses: returntocorp/semgrep-action@v1
      with:
        config: p/ci

  container-scan:
    name: Container Image Security
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build Docker image
      run: docker build -t app:latest .

    - name: Scan container image
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'app:latest'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'

  secret-scan:
    name: Secret Detection
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Scan for secrets
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  license-compliance:
    name: License Compliance
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check licenses
      uses: fossa-contrib/fossa-action@v2
      with:
        api-key: ${{ secrets.FOSSA_API_KEY }}

  security-report:
    name: Generate Security Report
    runs-on: ubuntu-latest
    needs: [dependency-scan, code-scan, container-scan, secret-scan]
    if: always()
    steps:
    - name: Download scan results
      uses: actions/download-artifact@v4
      with:
        pattern: '*'
        path: security-reports

    - name: Generate summary
      run: |
        echo "# Security Scan Report" > security-summary.md
        echo "Generated: $(date)" >> security-summary.md
        echo "" >> security-summary.md
        echo "## Scan Results" >> security-summary.md
        echo "- Dependency Scan: ${{ needs.dependency-scan.result }}" >> security-summary.md
        echo "- Code Scan: ${{ needs.code-scan.result }}" >> security-summary.md
        echo "- Container Scan: ${{ needs.container-scan.result }}" >> security-summary.md
        echo "- Secret Scan: ${{ needs.secret-scan.result }}" >> security-summary.md

    - name: Upload security report
      uses: actions/upload-artifact@v4
      with:
        name: security-report
        path: |
          security-summary.md
          security-reports/
        retention-days: 90